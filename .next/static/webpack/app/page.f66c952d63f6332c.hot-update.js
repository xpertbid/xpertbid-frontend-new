"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/services/api.ts":
/*!*****************************!*\
  !*** ./src/services/api.ts ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   apiService: () => (/* binding */ apiService),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst API_BASE_URL = 'http://127.0.0.1:8000/api';\nclass ApiService {\n    async request(endpoint) {\n        let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n        const url = \"\".concat(API_BASE_URL).concat(endpoint);\n        const defaultOptions = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            ...options\n        };\n        try {\n            const response = await fetch(url, defaultOptions);\n            if (!response.ok) {\n                throw new Error(\"HTTP error! status: \".concat(response.status));\n            }\n            return await response.json();\n        } catch (error) {\n            console.error('API request failed:', error);\n            throw error;\n        }\n    }\n    // Products - Using Laravel API endpoints\n    async getProducts(params) {\n        let url = '/products';\n        if (params === null || params === void 0 ? void 0 : params.limit) {\n            url += \"?limit=\".concat(params.limit);\n        }\n        if (params === null || params === void 0 ? void 0 : params.featured) {\n            url += \"\".concat(params.limit ? '&' : '?', \"featured=1\");\n        }\n        return this.request(url);\n    }\n    async getProduct(id) {\n        return this.request(\"/products/\".concat(id));\n    }\n    async getFeaturedProducts() {\n        let limit = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 8;\n        return this.request(\"/products?featured=1&limit=\".concat(limit));\n    }\n    // Categories - Using Laravel API endpoints\n    async getCategories() {\n        return this.request('/categories');\n    }\n    async getCategory(id) {\n        return this.request(\"/categories/\".concat(id));\n    }\n    async getProductsByCategory(categoryId, limit) {\n        let url = \"/products?category_id=\".concat(categoryId);\n        if (limit) {\n            url += \"&limit=\".concat(limit);\n        }\n        return this.request(url);\n    }\n    // Additional endpoints for XpertBid features\n    async getAuctions() {\n        return this.request('/auctions');\n    }\n    async getProperties() {\n        return this.request('/properties');\n    }\n    async getVehicles() {\n        return this.request('/vehicles');\n    }\n    async getBrands() {\n        return this.request('/brands');\n    }\n    async getBlogPosts() {\n        return this.request('/blog-posts');\n    }\n    // Bid placement\n    async placeBid(auctionId, bidData) {\n        return this.request(\"/auctions/\".concat(auctionId, \"/bids\"), {\n            method: 'POST',\n            body: JSON.stringify(bidData)\n        });\n    }\n    // Get user bidding history\n    async getUserBids(email) {\n        return this.request(\"/user/\".concat(email, \"/bids\"));\n    }\n    // Get available payment gateways\n    async getPaymentGateways() {\n        return this.request('/payment-gateways');\n    }\n    // Process payment\n    async processPayment(paymentData) {\n        return this.request('/payment/process', {\n            method: 'POST',\n            body: JSON.stringify({\n                tenant_id: 1,\n                ...paymentData\n            })\n        });\n    }\n    // Authentication methods\n    async login(credentials) {\n        return this.request('/auth/login', {\n            method: 'POST',\n            body: JSON.stringify(credentials)\n        });\n    }\n    async register(userData) {\n        return this.request('/auth/register', {\n            method: 'POST',\n            body: JSON.stringify(userData)\n        });\n    }\n    async logout() {\n        return this.request('/auth/logout', {\n            method: 'POST'\n        });\n    }\n    async getCurrentUser() {\n        return this.request('/auth/user');\n    }\n    async refreshToken() {\n        return this.request('/auth/refresh', {\n            method: 'POST'\n        });\n    }\n    // Health check\n    async healthCheck() {\n        return this.request('/health');\n    }\n    // Custom request method for additional endpoints\n    async customRequest(endpoint) {\n        let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n        return this.request(endpoint, options);\n    }\n}\nconst apiService = new ApiService();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (apiService);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/services/api.ts\n"));

/***/ })

});